service: serverless-starter-backend-api
package:
  individually: true
  exclude:
    - node_modules/**
    - README.md
    - src/backend/**
    - src/frontend/**
    - package-lock.json

frameworkVersion: ">=1.21.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  list:
    handler: src/backend/report/list/list.list
    events:
      - http:
          path: reports
          method: get
          cors: true
    package:
      include:
        - src/backend/lib/**
        - src/backend/report/list/**         

  create:
    handler: src/backend/report/create/create.create
    events:
      - http:
          path: reports
          method: post
          cors: true
    package:
      include:
        - src/backend/lib/**
        - src/backend/report/create/**         

resources:
  Resources:
    ReportsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
